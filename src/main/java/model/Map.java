package model;

import com.google.gson.Gson;

import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;

public class Map {
    private Cell[][] mapArrayOfCells = new Cell[31][31];
    private int id;
    private static int idCounter = 1;
    private static ArrayList<Map> allMaps;
    private static final String mapsDirectoryPath = System.getProperty("user.dir") +
            File.separator + "database" + File.separator + "maps";

    static {
        allMaps = new ArrayList<>();
        String[] strings = new String[]{
                "1111111111111111111111111111111",
                "1010000000000000000000000000101",
                "1011111011110110110111101111101",
                "1011111011110110110111101111101",
                "1011111011110110110111101111101",
                "1010111011110110110111101110101",
                "1000000000000000000000000000001",
                "1011110111111101011111110111101",
                "1000000000000000000000000000001",
                "1010111101011101011101011110101",
                "1010111101011101011101011110101",
                "1010111101001001011101011110101",
                "1010011001011101011101011110101",
                "1010111101011101011101001100101",
                "1010111101000001000001011110101",
                "1010111101011111111101011110101",
                "1010111101000001000001011110101",
                "1010111101011101011101001100101",
                "1010011001011101011101011110101",
                "1010111101011101001001011110101",
                "1010111101011101011101011110101",
                "1010111101011101011101011110101",
                "1000000000000000000000000000001",
                "1011110111111101011111110111101",
                "1000000000000000000000000000001",
                "1010111011110110110111101110101",
                "1011111011110110110111101111101",
                "1011111011110110110111101111101",
                "1011111011110110110111101111101",
                "1010000000000000000000000000101",
                "1111111111111111111111111111111"
        };
        char[][] map = new char[31][31];
        Cell[][] cellMap = new Cell[31][31];
        for (int i = 0; i < map.length; i++) {
            map[i] = strings[i].toCharArray();

        }
        for (int i = 0; i <= 30; i++)
            for (int j = 0; j <= 30; j++) {
                if (map[j][i] == '1')
                    cellMap[j][i] = new Cell(map[j][i], true, j, i);
                else
                    cellMap[j][i] = new Cell(map[j][i], false, j, i);
            }
        new Map(cellMap);
        //----------------------------
        strings = new String[]{
                "1111111111111111111111111111111",
                "1000000000000000000000000000001",
                "1011101011110110110111010111101",
                "1000001000000110110000010000001",
                "1011101011110110110111010111101",
                "1000001000000110110000010000001",
                "1011101011110110110111010111101",
                "1011101011110110110111010111101",
                "1000000000000000000000000000001",
                "1011011011010101010101101101101",
                "1011011011010101010101101101101",
                "1011011011010101010101101101101",
                "1011011011010101010101101101101",
                "1000000000000000000000000000001",
                "1011101110111011011101110011101",
                "1011101110000011000001110011101",
                "1011101110111011011101110011101",
                "1000000000000000000000000000001",
                "1011011011010101010101101101101",
                "1011011011010101010101101101101",
                "1011011011010101010101101101101",
                "1011011011010101010101101101101",
                "1000000000000000000000000000001",
                "1011101011110110110111010111101",
                "1011101011110110110111010111101",
                "1000001000000110110000010000001",
                "1011101011110110110111010111101",
                "1000001000000110110000010000001",
                "1011101011110110110111010111101",
                "1000000000000000000000000000001",
                "1111111111111111111111111111111"
        };
        char[][] map2 = new char[31][31];
        Cell[][] cellMap2 = new Cell[31][31];
        for (int i = 0; i < map2.length; i++) {
            map2[i] = strings[i].toCharArray();
        }
        for (int i = 0; i <= 30; i++)
            for (int j = 0; j <= 30; j++) {
                if (map2[j][i] == '1')
                    cellMap2[j][i] = new Cell(map2[j][i], true, j, i);
                else
                    cellMap2[j][i] = new Cell(map2[j][i], false, j, i);
            }

        new Map(cellMap2);
        //------------------------------------------
        strings = new String[]{
                "1111111111111111111111111111111",
                "1000000000000000000000000000001",
                "1010111011110111101111011110101",
                "1010111011110111101111011110101",
                "1010111011110111101111011110101",
                "1000000000000000000000000000001",
                "1011011011011110111101101101101",
                "1011011011011110111101101101101",
                "1011011011011110111101101101101",
                "1000000000000000000000000000001",
                "1010101011101111111011101010101",
                "1010101011101111111011101010101",
                "1010101011101111111011101010101",
                "1000000000000000000000000000001",
                "1011111111110101010111111111101",
                "1010000000000111110000000000101",
                "1011111111110101010111111111101",
                "1000000000000000000000000000001",
                "1010101011101111111011101010101",
                "1010101011101111111011101010101",
                "1010101011101111111011101010101",
                "1000000000000000000000000000001",
                "1011011011011110111101101101101",
                "1011011011011110111101101101101",
                "1011011011011110111101101101101",
                "1000000000000000000000000000001",
                "1010111011110111101111011110101",
                "1010111011110111101111011110101",
                "1010111011110111101111011110101",
                "1000000000000000000000000000001",
                "1111111111111111111111111111111"
        };
        char[][] map3 = new char[31][31];
        Cell[][] cellMap3 = new Cell[31][31];
        for (int i = 0; i < map3.length; i++) {
            map3[i] = strings[i].toCharArray();
        }
        for (int i = 0; i <= 30; i++)
            for (int j = 0; j <= 30; j++) {
                if (map3[j][i] == '1')
                    cellMap3[j][i] = new Cell(map3[j][i], true, j, i);
                else
                    cellMap3[j][i] = new Cell(map3[j][i], false, j, i);
            }

        new Map(cellMap3);
        readMaps();
    }

    public Map(Cell[][] map) {
        this.mapArrayOfCells = map;
        id = idCounter;
        idCounter++;
        allMaps.add(this);
    }

    public Cell[][] getArray() {
        return mapArrayOfCells;
    }

    public int getId() {
        return id;
    }

    public static Map getMapByID(int id) {
        for (Map map : allMaps) {
            if (map.id == id)
                return map;
        }
        return null;
    }

    public static void jsonMaps(Map map) {
        try {
            FileWriter myWriter = new FileWriter(mapsDirectoryPath + File.separator + map.getId() + ".json");
            new Gson().toJson(map, myWriter);
            myWriter.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void readMaps() {
        File maps = new File(mapsDirectoryPath);
        File[] mapsFiles = maps.listFiles();
        if (mapsFiles == null) {
            return;
        }
        for (File file : mapsFiles) {
            if (!file.getName().matches(".*[.]json")) {
                continue;
            }
            try {
                FileReader fileReader = new FileReader(file);
                Map map = new Gson().fromJson(fileReader, Map.class);
                allMaps.add(map);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        idCounter = 1 + allMaps.size();
    }
}
